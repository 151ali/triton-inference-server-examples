version: '3'

networks:
  monitor-net:
    driver: bridge

services:
  trtserver:
    image: nvcr.io/nvidia/tritonserver:21.08-py3
    container_name: trtserver
    ipc: host
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
    volumes: 
      - $PWD/../model_repository:/models
    command: tritonserver  --model-repository /models  --strict-model-config false #--log-verbose=true
    # $ curl localhost:8000/v2/models/<model name>/config
    networks:
      - monitor-net

#  trtclient:
#    image: trtclient
#    build:
#      contex: ..
#      dockerfile: docker/Dockerfile
#    depends_on:
#      - trtserver


#  # Monitoring
#  # TODO : add alert manager
#  prometheus:
#    image: prom/prometheus:v2.31.1
#    container_name: prometheus
#    user: root
#    ports:
#      - 9090:9090    
#    volumes:
#      - $PWD/../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:rw
#      - $PWD/../monitoring/prometheus/prometheus_data:/prometheus:rw
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#      - '--storage.tsdb.path=/prometheus'
#    depends_on:
#      - trtserver
#    restart: unless-stopped
#    networks:
#      - monitor-net


#  grafana:
#    image: grafana/grafana:6.7.2
#    user: root
#    restart: always
##    environment:
##      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
#    volumes:
#      - $PWD/../monitoring/grafana/grafana_data:/var/lib/grafana
#      - $PWD/../monitoring/grafana/provisioning:/etc/grafana/provisioning
#    env_file:
#      - $PWD/../monitoring/grafana/config.monitoring
#    ports:
#      - 3000:3000
#    depends_on:
#      - prometheus
#    networks:
#      - monitor-net
